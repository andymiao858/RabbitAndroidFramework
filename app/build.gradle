apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "com.rabbit.framework"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        buildConfigField('String', 'API_VERSION', '\"v' + versionName + '\"')
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {

        debug {
            multiDexEnabled true
            jniDebuggable   true
            manifestPlaceholders = ['APP_NAME': 'Rabbit-Debug']
            buildConfigField('com.rabbit.framework.config.PhaseEnum', 'PHASE', 'com.rabbit.framework.config.PhaseEnum.ALPHA')
            buildConfigField('int', 'LOG_LEVEL', 'android.util.Log.VERBOSE')
        }

        alpha {
            multiDexEnabled true
            manifestPlaceholders = ['APP_NAME': 'Rabbit-α']
            buildConfigField('com.rabbit.framework.config.PhaseEnum', 'PHASE', 'com.rabbit.framework.config.PhaseEnum.ALPHA')
            buildConfigField('int', 'LOG_LEVEL', 'android.util.Log.VERBOSE')
        }

        beta {
            multiDexEnabled true
            manifestPlaceholders = ['APP_NAME': 'Rabbit-β']
            buildConfigField('com.rabbit.framework.config.PhaseEnum', 'PHASE', 'com.rabbit.framework.config.PhaseEnum.BETA')
            buildConfigField('int', 'LOG_LEVEL', 'android.util.Log.VERBOSE')
        }

        release {
            multiDexEnabled true
            manifestPlaceholders = ['APP_NAME': 'Rabbit']
            buildConfigField('com.rabbit.framework.config.PhaseEnum', 'PHASE', 'com.rabbit.framework.config.PhaseEnum.RELEASE')
            buildConfigField('int', 'LOG_LEVEL', 'android.util.Log.ERROR')
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        yingyongbao {}
        m360 {}

    }

    applicationVariants.all { variant ->
        if (variant.getName() == "yingyongbao"){
            variant.buildConfigField('String', 'FLAVOR', '\"yingyongbao\"')
            variant.manifestPlaceholders = ['FLAVOR': 'yingyongbao']
            variant.applicationIdSuffix = ".yingyongbao"
        } else if (variant.getName() == "m360"){
            variant.buildConfigField('String', 'FLAVOR', '\"baidu\"')
            variant.manifestPlaceholders = ['FLAVOR': 'baidu']
            variant.applicationIdSuffix = ".m360"
        }
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile project(path: ':android-volley')

    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:design:23.0.1'
    compile 'com.android.support:support-v4:23.0.0'
    compile 'com.android.support:recyclerview-v7:23.0.0'

    compile 'de.greenrobot:eventbus:2.4.0'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.squareup.retrofit2:retrofit:2.0.0-beta3'
    compile 'com.squareup.picasso:picasso:2.5.2'

    compile 'com.umeng.analytics:analytics:latest.integration'

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile "org.robolectric:robolectric:3.0"
    testCompile 'com.squareup.okhttp3:mockwebserver:3.0.1'


}
