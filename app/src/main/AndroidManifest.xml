<manifest
	package="com.rabbit.framework"
	xmlns:android="http://schemas.android.com/apk/res/android">

	<!-- Umeng Analytics required permissions -->
	<uses-permission android:name="android.permission.INTERNET"/>
	<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
	<uses-permission android:name="android.permission.READ_PHONE_STATE" />
	<uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />

	<!-- Optional permission for reliable local dispatching on non-Google Play devices -->
	<uses-permission android:name="android.permission.WAKE_LOCK"/>

	<!-- 个推SDK权限配置开始 -->
	<uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
	<uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
	<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
	<uses-permission android:name="android.permission.VIBRATE" />
	<uses-permission android:name="android.permission.GET_TASKS" />
	<!-- 支持iBeancon 需要蓝牙权限 -->
	<uses-permission android:name="android.permission.BLUETOOTH" />
	<uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
	<!-- 支持个推3.0 电子围栏功能 -->
	<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
	<uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
	<!-- 浮动通知权限 -->
	<uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />
	<!-- 自定义权限 -->
	<uses-permission android:name="getui.permission.GetuiService.${PACKAGE_NAME}" />

	<permission
		android:name="getui.permission.GetuiService.${PACKAGE_NAME}"
		android:protectionLevel="normal" >
	</permission>


	<application
		android:name=".RabbitApplication"
		android:allowBackup="true"
		android:icon="@mipmap/rabbit_icon"
		android:label="${APP_NAME}"
		android:supportsRtl="true"
		android:theme="@style/AppTheme">

		<activity
			android:name=".activities.MainActivity"
			android:theme="@style/AppTheme.NoActionBar">
			<intent-filter>
				<category android:name="android.intent.category.LAUNCHER"></category>
				<action android:name="android.intent.action.MAIN"></action>
			</intent-filter>
		</activity>

		<activity android:name=".activities.ButterKnifeSampleActivity"/>
		<activity android:name=".activities.EventbusSampleActivity" />
		<activity android:name=".activities.VolleySampleActivity" />
		<activity android:name=".activities.GlideDemoActivity" />
		<activity android:name=".activities.DownUploadDemoActivity" />
		<activity android:name=".activities.AnalyticsHome" />
		<activity android:name=".activities.GetuiDemoActivity" />

		<!-- Analytics start -->
		<activity android:name=".activities.WebviewAnalytic" />
		<activity android:name=".activities.FragmentStack" />
		<activity android:name=".activities.FragmentTabs" />

		<!-- Umeng Analytics -->
		<meta-data android:name="UMENG_APPKEY" android:value="${UMENG_APP_KEY}" />
		<meta-data android:name="UMENG_CHANNEL" android:value="${FLAVOR}" />

		<!-- Getui push -->
		<!-- 个推SDK配置开始 -->
		<!-- 配置的第三方参数属性 -->
		<meta-data android:name="PUSH_APPID" android:value="${GETUI_APP_ID}" />
		<meta-data android:name="PUSH_APPKEY" android:value="${GETUI_APP_KEY}" />
		<meta-data android:name="PUSH_APPSECRET" android:value="${GETUI_APP_SECRET}" />

		<!-- 配置第三方Receiver -->
		<receiver
			android:name="com.rabbit.framework.broadcastreceiver.RabbitPushReceiver"
			android:exported="false" >
			<intent-filter>
				<action android:name="com.igexin.sdk.action.${GETUI_APP_ID}" />
			</intent-filter>
		</receiver>

		<!-- 配置SDK核心服务 -->
		<service
			android:name="com.igexin.sdk.PushService"
			android:exported="true"
			android:label="NotificationCenter"
			android:process=":pushservice" >
		</service>
		<service
			android:name="com.igexin.sdk.PushServiceUser"
			android:exported="true"
			android:label="NotificationCenterUser" >
		</service>

		<receiver android:name="com.igexin.sdk.PushReceiver" >
			<intent-filter>
				<action android:name="android.intent.action.BOOT_COMPLETED" />
				<action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
				<action android:name="android.intent.action.USER_PRESENT" />
				<action android:name="com.igexin.sdk.action.refreshls" />
				<!-- 以下三项为可选的action声明，可大大提高service存活率和消息到达速度 -->
				<action android:name="android.intent.action.MEDIA_MOUNTED" />
				<action android:name="android.intent.action.ACTION_POWER_CONNECTED" />
				<action android:name="android.intent.action.ACTION_POWER_DISCONNECTED" />
			</intent-filter>
		</receiver>
		<receiver
			android:name="com.igexin.sdk.PushManagerReceiver"
			android:exported="false" >
			<intent-filter>
				<action android:name="com.igexin.sdk.action.pushmanager" />
			</intent-filter>
		</receiver>

		<activity
			android:name="com.igexin.sdk.PushActivity"
			android:excludeFromRecents="true"
			android:exported="false"
			android:process=":pushservice"
			android:taskAffinity="com.igexin.sdk.PushActivityTask"
			android:theme="@android:style/Theme.Translucent.NoTitleBar" >
		</activity>

		<service
			android:name="com.igexin.download.DownloadService"
			android:process=":pushservice" />

		<receiver android:name="com.igexin.download.DownloadReceiver" >
			<intent-filter>
				<action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
			</intent-filter>
		</receiver>

		<provider
			android:name="com.igexin.download.DownloadProvider"
			android:exported="true"
			android:authorities="downloads.${PACKAGE_NAME}"
			android:process=":pushservice" />

		<activity
			android:name="com.igexin.getuiext.activity.GetuiExtActivity"
			android:configChanges="orientation|keyboard|keyboardHidden"
			android:excludeFromRecents="true"
			android:exported="false"
			android:process=":pushservice"
			android:taskAffinity="android.task.myServicetask"
			android:theme="@android:style/Theme.Translucent.NoTitleBar" />


		<activity
			android:name="com.igexin.sdk.GActivity"
			android:excludeFromRecents="true"
			android:exported="true"
			android:process=":pushservice"
			android:taskAffinity="com.igexin.sdk.PushActivityTask"
			android:theme="@android:style/Theme.Translucent.NoTitleBar"/>


		<receiver
			android:name="com.igexin.getuiext.service.PayloadReceiver"
			android:exported="false" >
			<intent-filter>
				<action android:name="com.igexin.sdk.action.7fjUl2Z3LH6xYy7NQK4ni4" />
				<action android:name="com.igexin.sdk.action.${GETUI_APP_ID}" />
			</intent-filter>
		</receiver>

		<service
			android:name="com.igexin.getuiext.service.GetuiExtService"
			android:process=":pushservice" />

		<!-- 个推SDK配置结束 -->

	</application>

</manifest>
